local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=0;local F;local G;local H;local I;local J;local K;local L;local M;local N;local O;local P;local Q;while true do if E==0 then F=1;G=nil;C=q(p(C,15-10),h("\7\149","\28\41\187\47"),function(R)if n(R,2)==79 then local S=0;while true do if S==0 then G=m(p(R,1,1))return""end end else local T=0;local U;while true do if T==0 then U=o(m(R,16))if G then local V=r(U,G)G=nil;return V else return U end;break end end end end)E=1 end;if E==5 then N=K;O=nil;function O(...)return{...},y("#",...)end;E=6 end;if E==1 then H=nil;function H(W,X,Y)if Y then local Z=0;local _;while true do if 0==Z then _=W/2^(X-1)%2^(Y-1-(X-1)+1)return _-_%1 end end else local a0=2^(X-1)return W%(a0+a0)>=a0 and 1 or 0-0 end end;I=nil;E=2 end;if E==6 then P=nil;function P()local a1=0;local a2;local a3;local a4;local a5;local a6;local a7;while true do if a1==1 then a5={a2,a3,nil,a4}a6=K()a7={}a1=2 end;if a1==0 then a2={}a3={}a4={}a1=1 end;if a1==2 then for a8=1,a6 do local a9=I()local aa;if a9==928-(214+713)then aa=I()~=0 elseif a9==2 then aa=L()elseif a9==3 then aa=M()end;a7[a8]=aa end;a5[3]=I()for ab=1+0,K()do local ac=I()if H(ac,1,1)==0 then local ad=H(ac,2,3)local ae=H(ac,4,6)local af={J(),J(),nil,nil}if ad==0 then af[3]=J()af[4]=J()elseif ad==1 then af[3]=K()elseif ad==2 then af[3]=K()-2^16 elseif ad==3 then local ag=0;while true do if ag==0 then af[3]=K()-2^16;af[4]=J()break end end end;if H(ae,1,878-(282+595))==1 then af[2]=a7[af[1639-(1523+114)]]end;if H(ae,2,2)==1 then af[3]=a7[af[3+0]]end;if H(ae,3,3)==1 then af[4]=a7[af[4]]end;a2[ab]=af end end;a1=3 end;if 3==a1 then for ah=1-0,K()do a3[ah-1]=P()end;return a5 end end end;Q=nil;E=7 end;if E==3 then K=nil;function K()local ai=0;local aj;local ak;local al;local am;while true do if ai==0 then aj,ak,al,am=n(C,F,F+3)F=F+4;ai=1 end;if ai==1 then return am*16777216+al*65536+ak*256+aj end end end;L=nil;E=4 end;if E==7 then function Q(an,ao,ap)local aq=0;local ar;local as;local at;while true do if aq==1 then at=an[1068-(68+997)]return function(...)local au=ar;local av=as;local aw=at;local ax=O;local ay=1;local az=-1;local aA={}local aB={...}local aC=y("#",...)-(1271-(226+1044))local aD={}local aE={}for aF=0,aC do if aF>=aw then aA[aF-aw]=aB[aF+1]else aE[aF]=aB[aF+1]end end;local aG=aC-aw+1;local aH;local aI;while true do aH=au[ay]aI=aH[1]if aI<=45 then if aI<=22 then if aI<=10 then if aI<=4 then if aI<=1 then if aI==0-0 then local aJ=0;local aK;local aL;local aM;while true do if aJ==1 then aM={}aL=w({},{[h("\62\13\15\52\89\4\42","\61\97\82\102\90")]=function(aN,aO)local aP=aM[aO]return aP[1][aP[119-(32+85)]]end,[h("\147\17\165\78\208\94\16\13\169\54","\105\204\78\203\43\167\55\126")]=function(aQ,aR,aS)local aT=0;local aU;while true do if aT==0 then aU=aM[aR]aU[1][aU[2]]=aS;break end end end})aJ=2 end;if aJ==2 then for aV=1,aH[4]do local aW=0;local aX;while true do if aW==1 then if aX[1]==50 then aM[aV-(1+0)]={aE,aX[3]}else aM[aV-1]={ao,aX[3]}end;aD[#aD+1]=aM;break end;if aW==0 then ay=ay+1;aX=au[ay]aW=1 end end end;aE[aH[2]]=Q(aK,aL,ap)break end;if aJ==0 then aK=av[aH[3]]aL=nil;aJ=1 end end else ay=aH[3]end elseif aI<=2 then if aH[2]==aE[aH[4]]then ay=ay+1 else ay=aH[3]end elseif aI>1+2 then aE[aH[2]]()else local aY=aH[3]local aZ=aE[aY]for a_=aY+958-(892+65),aH[4]do aZ=aZ..aE[a_]end;aE[aH[2]]=aZ end elseif aI<=7 then if aI<=5 then local b0=aH[4-2]local b1=aE[b0+2]local b2=aE[b0]+b1;aE[b0]=b2;if b1>0 then if b2<=aE[b0+1]then ay=aH[3]aE[b0+3]=b2 end elseif b2>=aE[b0+1]then ay=aH[3]aE[b0+5-2]=b2 end elseif aI>6 then aE[aH[2]]=aE[aH[3]][aH[4]]else ap[aH[3]]=aE[aH[2]]end elseif aI<=8 then do return end elseif aI>15-6 then local b3=aH[2]aE[b3]=aE[b3](z(aE,b3+1,aH[3]))else local b4=0;local b5;local b6;while true do if b4==0 then b5=aH[2]b6=aE[aH[3]]b4=1 end;if b4==1 then aE[b5+351-(87+263)]=b6;aE[b5]=b6[aH[184-(67+113)]]break end end end elseif aI<=16 then if aI<=13 then if aI<=9+2 then local b7=0;local b8;local b9;local ba;while true do if b7==0 then b8=aH[4-2]b9=aE[b8]b7=1 end;if b7==1 then ba=aE[b8+2]if ba>0 then if b9>aE[b8+1]then ay=aH[3]else aE[b8+3]=b9 end elseif b9<aE[b8+1]then ay=aH[3]else aE[b8+3]=b9 end;break end end elseif aI>12 then ay=aH[3]else local bb=0;local bc;while true do if bb==0 then bc=aH[2]aE[bc]=aE[bc](aE[bc+1+0])break end end end elseif aI<=14 then local bd=0;local be;while true do if 0==bd then be=aH[2]do return aE[be](z(aE,be+1,aH[11-8]))end;break end end elseif aI>967-(802+150)then local bf=aH[2]local bg,bh=ax(aE[bf](z(aE,bf+1,aH[3])))az=bh+bf-1;local bi=0;for bj=bf,az do local bk=0;while true do if 0==bk then bi=bi+1;aE[bj]=bg[bi]break end end end else aE[aH[2]]={}end elseif aI<=50-31 then if aI<=17 then aE[aH[2]]=aH[3]+aE[aH[4]]elseif aI>18 then local bl=aH[3-1]aE[bl]=aE[bl](z(aE,bl+1,az))elseif not aE[aH[2]]then ay=ay+1 else ay=aH[3]end elseif aI<=20 then do return aE[aH[2]]()end elseif aI>21 then local bm=0;local bn;while true do if bm==0 then bn=aH[2]aE[bn](z(aE,bn+1,az))break end end else local bo=0;local bp;local bq;local br;local bs;while true do if bo==2 then for bt=bp,az do local bu=0;while true do if bu==0 then bs=bs+1;aE[bt]=bq[bs]break end end end;break end;if bo==0 then bp=aH[2]bq,br=ax(aE[bp](z(aE,bp+1,aH[3])))bo=1 end;if bo==1 then az=br+bp-1;bs=0;bo=2 end end end elseif aI<=33 then if aI<=27 then if aI<=24 then if aI==23 then aE[aH[2]][aH[3]]=aE[aH[4]]else local bv=aH[2+0]aE[bv](z(aE,bv+1,az))end elseif aI<=25 then aE[aH[2]]=aE[aH[1000-(915+82)]]%aE[aH[4]]elseif aI==26 then aE[aH[5-3]]=aE[aH[3]][aH[3+1]]else local bw=0;local bx;while true do if bw==0 then bx=aH[2-0]do return aE[bx](z(aE,bx+1,aH[3]))end;break end end end elseif aI<=30 then if aI<=28 then local by=aH[2]aE[by]=aE[by](z(aE,by+1,aH[3]))elseif aI>29 then aE[aH[2]]=aE[aH[3]]+aH[4]else aE[aH[2]]=aE[aH[3]]%aH[4]end elseif aI<=31 then local bz=aH[2]local bA=aE[bz]local bB=aE[bz+2]if bB>0 then if bA>aE[bz+1]then ay=aH[3]else aE[bz+3]=bA end elseif bA<aE[bz+1]then ay=aH[3]else aE[bz+3]=bA end elseif aI==32 then aE[aH[1189-(1069+118)]]=#aE[aH[3]]else aE[aH[2]]=aH[3]end elseif aI<=39 then if aI<=36 then if aI<=34 then local bC=aH[2]local bD=aH[4]local bE=bC+2;local bF={aE[bC](aE[bC+1],aE[bE])}for bG=1,bD do aE[bE+bG]=bF[bG]end;local bH=bF[1]if bH then aE[bE]=bH;ay=aH[3]else ay=ay+1 end elseif aI>35 then local bI=0;local bJ;local bK;local bL;local bM;while true do if bI==1 then az=bL+bJ-1;bM=0;bI=2 end;if 2==bI then for bN=bJ,az do local bO=0;while true do if 0==bO then bM=bM+1;aE[bN]=bK[bM]break end end end;break end;if bI==0 then bJ=aH[2]bK,bL=ax(aE[bJ](z(aE,bJ+1,az)))bI=1 end end else for bP=aH[2],aH[3]do aE[bP]=nil end end elseif aI<=37 then local bQ=aH[2]local bR=aH[4]local bS=bQ+2;local bT={aE[bQ](aE[bQ+1],aE[bS])}for bU=1,bR do aE[bS+bU]=bT[bU]end;local bV=bT[1]if bV then aE[bS]=bV;ay=aH[3]else ay=ay+1 end elseif aI>38 then do return end else local bW=aH[2]aE[bW]=aE[bW]()end elseif aI<=94-52 then if aI<=40 then local bX=aH[2]local bY={aE[bX](aE[bX+1-0])}local bZ=0;for b_=bX,aH[4]do local c0=0;while true do if c0==0 then bZ=bZ+1;aE[b_]=bY[bZ]break end end end elseif aI>41 then aE[aH[2]][aE[aH[3]]]=aH[1+3]else local c1=0;local c2;while true do if c1==0 then c2=aH[3-1]aE[c2](aE[c2+1])break end end end elseif aI<=43 then local c3=aH[2]aE[c3](z(aE,c3+1,aH[3]))elseif aI>44 then if aE[aH[2]]==aH[4]then ay=ay+1 else ay=aH[3+0]end elseif aE[aH[2]]then ay=ay+1 else ay=aH[3]end elseif aI<=68 then if aI<=56 then if aI<=50 then if aI<=47 then if aI==46 then aE[aH[2]]=aH[3]else local c4=0;local c5;local c6;local c7;while true do if c4==0 then c5=aH[2]c6={aE[c5](aE[c5+1])}c4=1 end;if c4==1 then c7=0;for c8=c5,aH[4]do c7=c7+1;aE[c8]=c6[c7]end;break end end end elseif aI<=839-(368+423)then local c9=0;local ca;local cb;local cc;while true do if c9==2 then if cb>0 then if cc<=aE[ca+1]then ay=aH[9-6]aE[ca+3]=cc end elseif cc>=aE[ca+1]then ay=aH[3]aE[ca+3]=cc end;break end;if c9==0 then ca=aH[2]cb=aE[ca+2]c9=1 end;if c9==1 then cc=aE[ca]+cb;aE[ca]=cc;c9=2 end end elseif aI>49 then aE[aH[2]]=aE[aH[3]]elseif aE[aH[2]]then ay=ay+1 else ay=aH[3]end elseif aI<=71-(10+8)then if aI<=51 then local cd=aH[7-5]local ce,cf=ax(aE[cd](aE[cd+1]))az=cf+cd-1;local cg=442-(416+26)for ch=cd,az do cg=cg+3-2;aE[ch]=ce[cg]end elseif aI==52 then aE[aH[2]][aE[aH[3]]]=aH[4]else local ci=0;local cj;while true do if 0==ci then cj=aH[2]do return z(aE,cj,az)end;break end end end elseif aI<=54 then aE[aH[2]]=aH[3]+aE[aH[4]]elseif aI>55 then aE[aH[2]]=ao[aH[3]]elseif aE[aH[2]]==aH[4]then ay=ay+1 else ay=aH[3]end elseif aI<=62 then if aI<=59 then if aI<=57 then local ck=0;local cl;local cm;local cn;local co;while true do if ck==2 then for cp=cl,az do local cq=0;while true do if cq==0 then co=co+1;aE[cp]=cm[co]break end end end;break end;if ck==0 then cl=aH[2]cm,cn=ax(aE[cl](z(aE,cl+1,az)))ck=1 end;if ck==1 then az=cn+cl-1;co=0;ck=2 end end elseif aI>58 then for cr=aH[2],aH[3]do aE[cr]=nil end else local cs=0;local ct;local cu;local cv;while true do if 2==cs then for cw=1,aH[4]do local cx=0;local cy;while true do if cx==0 then ay=ay+1;cy=au[ay]cx=1 end;if cx==1 then if cy[1]==50 then cv[cw-1]={aE,cy[4-1]}else cv[cw-1]={ao,cy[3]}end;aD[#aD+1]=cv;break end end end;aE[aH[2]]=Q(ct,cu,ap)break end;if cs==1 then cv={}cu=w({},{[h("\154\149\42\16\23\1\223","\49\197\202\67\126\115\100\167")]=function(cz,cA)local cB=0;local cC;while true do if cB==0 then cC=cv[cA]return cC[1+0][cC[2]]end end end,[h("\8\100\209\44\151\95\80\51\94\199","\62\87\59\191\73\224\54")]=function(cD,cE,cF)local cG=0;local cH;while true do if 0==cG then cH=cv[cE]cH[1][cH[2]]=cF;break end end end})cs=2 end;if cs==0 then ct=av[aH[3]]cu=nil;cs=1 end end end elseif aI<=60 then local cI=0;local cJ;while true do if cI==0 then cJ=aH[2]aE[cJ](z(aE,cJ+1,aH[3]))break end end elseif aI>61 then local cK=aH[2]do return z(aE,cK,az)end else aE[aH[440-(145+293)]]=ao[aH[3]]end elseif aI<=65 then if aI<=63 then ap[aH[433-(44+386)]]=aE[aH[1488-(998+488)]]elseif aI>64 then aE[aH[2]]=aE[aH[3]]+aH[4]else aE[aH[2]]()end elseif aI<=66 then aE[aH[2]][aE[aH[3]]]=aE[aH[2+2]]elseif aI>67 then aE[aH[2]][aE[aH[3]]]=aE[aH[4+0]]else aE[aH[2]]=aE[aH[3]]%aH[4]end elseif aI<=79 then if aI<=73 then if aI<=70 then if aI==69 then local cL=0;local cM;local cN;while true do if cL==1 then for cO=cM+1,aH[4]do cN=cN..aE[cO]end;aE[aH[2]]=cN;break end;if cL==0 then cM=aH[3]cN=aE[cM]cL=1 end end else local cP=0;local cQ;local cR;while true do if cP==0 then cQ=aH[2]cR=aE[cQ]cP=1 end;if 1==cP then for cS=cQ+1,az do t(cR,aE[cS])end;break end end end elseif aI<=71 then if not aE[aH[2]]then ay=ay+1 else ay=aH[3]end elseif aI==72 then aE[aH[2]][aH[3]]=aH[4]else local cT=aH[2]aE[cT]=aE[cT]()end elseif aI<=76 then if aI<=74 then aE[aH[2]]=aE[aH[3]]%aE[aH[776-(201+571)]]elseif aI>75 then local cU=0;local cV;while true do if cU==0 then cV=aH[2]aE[cV]=aE[cV](z(aE,cV+1,az))break end end else aE[aH[2]][aH[3]]=aE[aH[1142-(116+1022)]]end elseif aI<=77 then if aH[2]==aE[aH[4]]then ay=ay+1 else ay=aH[3]end elseif aI==78 then aE[aH[2]][aH[12-9]]=aH[4]else local cW=0;local cX;while true do if cW==0 then cX=aH[2]aE[cX]=aE[cX](aE[cX+1])break end end end elseif aI<=85 then if aI<=82 then if aI<=80 then aE[aH[2]]=ap[aH[3]]elseif aI==81 then local cY=0;local cZ;while true do if cY==0 then cZ=aH[2]aE[cZ](aE[cZ+1])break end end else do return aE[aH[2]]()end end elseif aI<=49+34 then local c_=0;local d0;local d1;while true do if c_==0 then d0=aH[2]d1=aE[aH[3]]c_=1 end;if 1==c_ then aE[d0+1]=d1;aE[d0]=d1[aH[4]]break end end elseif aI==84 then aE[aH[2]]=#aE[aH[3]]else local d2=aH[2]local d3=aE[d2]for d4=d2+1,az do t(d3,aE[d4])end end elseif aI<=88 then if aI<=86 then aE[aH[2]]=Q(av[aH[3]],nil,ap)elseif aI>87 then aE[aH[2]]=ap[aH[3]]else aE[aH[7-5]]=aE[aH[3]]end elseif aI<=89 then local d5=0;local d6;local d7;local d8;local d9;while true do if d5==1 then az=d8+d6-(3-2)d9=0;d5=2 end;if 0==d5 then d6=aH[2]d7,d8=ax(aE[d6](aE[d6+1]))d5=1 end;if 2==d5 then for da=d6,az do local db=0;while true do if db==0 then d9=d9+1;aE[da]=d7[d9]break end end end;break end end elseif aI>90 then aE[aH[2]]=Q(av[aH[862-(814+45)]],nil,ap)else aE[aH[2]]={}end;ay=ay+1 end end end;if aq==0 then ar=an[1]as=an[2]aq=1 end end end;return Q(P(),{},D)(...)end;if 4==E then function L()local dc=0;local dd;local de;local df;local dg;local dh;local di;while true do if dc==0 then dd=K()de=K()dc=1 end;if dc==1 then df=1;dg=H(de,1,20)*2^32+dd;dc=2 end;if dc==2 then dh=H(de,21,31)di=H(de,32)==1 and-1 or 1;dc=3 end;if 3==dc then if dh==0 then if dg==0 then return di*(0-0)else dh=1;df=0 end elseif dh==2047 then return dg==619-(555+64)and di*1/0 or di*NaN end;return u(di,dh-1023)*(df+dg/2^(983-(857+74)))end end end;M=nil;function M(dj)local dk;if not dj then local dl=0;while true do if 0==dl then dj=K()if dj==0 then return""end;break end end end;dk=p(C,F,F+dj-1)F=F+dj;local dm={}for dn=1,#dk do dm[dn]=o(n(p(dk,dn,dn)))end;return s(dm)end;E=5 end;if E==2 then function I()local dp=n(C,F,F)F=F+1;return dp end;J=nil;function J()local dq=0;local dr;local ds;while true do if dq==0 then dr,ds=n(C,F,F+3-1)F=F+2;dq=1 end;if dq==1 then return ds*256+dr end end end;E=3 end end endv(),...)
